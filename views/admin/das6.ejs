<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">
    <link rel="stylesheet" href="/styles.css">
    <script src="/js/admin.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
    <title>NEXUS ADMIN</title>
    <style>
        .main-frame {
            overflow: hidden;
        }
        .head-nav {
            margin-bottom: 0;
        }
        .main-content {
            overflow: hidden;
            border-radius: 8px;
            display: flex;
            flex: 1; /* Take remaining height */
            gap: 30px;
            flex-direction: row;
            height: 300px;
            padding: 0 5px 0 0;
            background-color: transparent;
            overflow: hidden;
        }
        .main-content.desc {
            background-color: white;
            margin: 0 10px 0 0;
            border: 0.5px solid rgb(236, 235, 235);
            flex: 1;
            height: auto;
            padding: 10px;
            overflow: hidden;
        }
        .pframe {
            flex: 3; /* 75% width */
            display: flex;
            flex-direction: column;
            height: 100%; /* Match analysis-frame height */
            border-radius: 18px;
            padding: 10px 10px;
            position: relative;
            justify-content: flex-end;
            align-items: center;
            border: 0.5px solid rgb(197, 195, 1950, 0.3);
            box-shadow: 0 0 10px rgba(162, 162, 162, 0.5);
            background-color: white;
        }
        #myChart {
            max-height: 250px;
        }
        .small-select {
            appearance: none;
            font-size: 14px;
            padding: 5px 10px;
            position: absolute;
            right: 10px;
            top: 13px;
            text-align: center;
            cursor: pointer;
            border: none;
            border-radius: 10px;
        }
        .divrow {
            padding: 5px;
            gap: 10px;
            overflow: hidden;
            justify-content: flex-start;
        }
        .divcol {
            border-radius: 10px;
            color: white;
            align-items: flex-start;
            padding: 5px;
            gap: 5px;
            max-width: 30%;
            box-shadow: 0 2px 8px rgba(162, 162, 162, 0.3);
            height: 100px;
        }
        .divcol:hover {
            transform: scale(1.05);
        }
        .divcol i {
            color: #364e3b;
            font-size: 18px;
            text-align: center;
            margin-right: 5px;
        }
        .titleCard a {
            background-color: #bceace;
            padding: 3px 8px;
            border-radius: 10px;
            font-weight: normal;
            font-size: 14px;
            color: green;
        }
        
        .ctrl.right a {
            text-decoration: none;
            padding: 10px;
            color: black; /* Default link color */
            border: 1px solid transparent;
            border-radius: 18px;
            transition: background-color 0.3s, color 0.3s;
            background-color: transparent;
            margin: 0 2px;
            width: 140px;
        }
        .ctrl.right a.active {
            background-color: #4a7b58;
            color: white; /* Active text color */
        }
        
        .ctrl.right a.active i {
            color: white; /* Active text color */
        }
        .ctrl.right a:hover {
            background-color: #80ae90;
            color: white; /* Hover text color */
        }
        .ctrl.right a:hover i {
            color: white;
        }
        .ctrl a i {
            color: black;
        }
        .divcol ph {
            font-size: 16px;
            font-weight: 400;
        }
        .divcol p1 {
            font-size: 20px;
            font-weight: 500;
        }
        .divcol p2 {
            font-size: 12px;
            opacity: 0.9;
        }
        .ctrl.left a {
            max-width: 200px;
            width: 125px;
        }

        .divcol.records:nth-child(5n+1) {
            background-color: #4a7b58; /* 1st, 6th, 11th, etc. */
        }

        .divcol.records:nth-child(5n+2) {
            background-color: #44624a; /* 2nd, 7th, 12th, etc. */
        }

        .divcol.records:nth-child(5n+3) {
            background-color: #3d5842; /* 3rd, 8th, 13th, etc. */
        }

        .divcol.records:nth-child(5n+4) {
            background-color: #364e3b; /* 4th, 9th, 14th, etc. */
        }

        .divcol.records:nth-child(5n+5) {
            background-color: #2f4433; /* 5th, 10th, 15th, etc. */
        }
        

        .pagination a, .pagination button {
            color: black;
        }

@media print {
    .analytics {
        -webkit-print-color-adjust: exact; /* Chrome/Safari */
        print-color-adjust: exact; /* Firefox */
    }
    .main-content.graph {
        display: none;
    }
}
    </style>
</head>
<body>
    <div class="container">
        <div class="userOption" style="display: none;">
            <a href="/admin/user">Profile <i class="fa-solid fa-user"></i></a><hr>
            <a href="/admin/welcome">Logout <i class="fa-solid fa-arrow-right-from-bracket"></i></a>
        </div>
        <div class="notif-nav" style="display: none;">
            <iframe class="notif-frame" src="/admin/notif" width="100%" height="100%" frameborder="0"></iframe>
        </div>
        <div class="info-nav" style="display: none;">
            <iframe class="info-frame" src="/admin/hotline" width="100%" height="100%" frameborder="0"></iframe>
        </div>

        <div class="side-frame">
            <div class="head-nav" style="margin-top: 0;">
                <div class="nav" style="justify-content: flex-start; width: 100%;">               
                    <div class="pnav" style="align-items: flex-start;">
                    <a href="#" id="userIcon" class="userIcon" style=" border: 1px solid gray; border-radius: 50%; box-shadow: none;">
                        <img src="<%= employeeData.userPhoto ? employeeData.userPhoto : '/images/profileX.jpg' %>" onerror="this.onerror=null; this.src='/images/profileX.jpg';" alt="Profile Picture">
                    </a>
                    </div>
                    <div class="snav">
                        <% if (employeeData) { %>
                            <% if (employeeData.role === 'Admin') { %>
                                <p2>Welcome Admin <br>
                                    <fh style="font-size: 20px;"><%= employeeData.firstName %></fh>
                                </p2>
                            <% } else if (employeeData.role === 'HR') { %>
                                <p2>Welcome HR <br>
                                    <fh style="font-size: 20px;"><%= employeeData.firstName %></fh>
                                </p2>
                            <% } else { %>
                                <p2>Welcome <br>
                                    <fh style="font-size: 20px;"><%= employeeData.firstName %></fh>
                                </p2>
                            <% } %>
                        <% } else { %>
                            <p2>Welcome Guest!</p2>
                        <% } %>
                    </div>
                </div>
            </div>
            <br>
            <div class="side-nav">
                <a href="/admin/notif" class="notif" style="position: relative; border: 0.5px solid lightgray;">
                <i class="fas fa-bell"></i>
                <% if (pendingCount > 0) { %>
                    <span id="badge" class="badge"><%= pendingCount %></span>
                <% } %>
                Notification
            </a>
                    <a href="/admin/ann" class="ann" style="position: relative; border: 0.5px solid lightgray;">
                        <i class="fas fa-circle-exclamation"></i> Announcements
                    </a>
                    <hr>
                    <a href="/admin/das" class="active"><i class="bi bi-bar-chart-fill"></i> Dashboard</a>
                    <a href="/admin/emp" class="emp"><i class="fas fa-user-tie"></i> Employees</a>
                    <a href="/admin/dig" class="dig"><i class="fas fa-address-card"></i> My Digital ID</a>
                    <a href="/admin/dir" class="dir"><i class="fa-solid fa-address-book"></i> Directory</a>
                    <a href="/admin/frm" class="frm"><i class="fas fa-file-alt"></i> Forms</a>
            </div>

            <div class="link" style="height: 6%; display: flex; align-items: center; gap: 10px; margin-right: 10px;">
                <a href="https://www.facebook.com/sciencecityofmunoz3119/" target="blank">
                    <i class="fa-brands fa-facebook-f"></i> Fb Page
                </a> 
                <a href="https://sciencecityofmunoz.gov.ph/" target="blank">
                    <i class="fas fa-globe"></i> Website
                </a>
            </div>
            <br>
            

            <div class="logo-nav">
                <img src="/images/logo.png" alt="NEXUS ID Logo">
                <p1>NEXUS ID</p1>
            </div>
        </div>


        <div class="main-frame">
            <div class="head-nav">
                <div class="title">
                    <ph>Dashboard</ph>
                </div>
                <div class="nav">
                    <div class="snav">
                    </div>                    
                    <div class="pnav">
                        <a href="javascript:void(0);" class="pbtn" onclick="printDas()">
                            <i class="fa-solid fa-print"></i> Print Data
                        </a>
                    </div>
                </div>
            </div>
            
<div class="analytics" style="overflow-y: auto; gap: 10px; background-color: #d9dfda; padding: 10px; border-radius: 10px;">
    <div class="head-nav">
        <div class="nav" style="justify-content: space-between; width: 100%;">
            <div class="snav">
                <a href="/admin/das" class="sbtn"><i class="fas fa-chevron-left"></i>Go Back</a> | 
                <ph>
                TODAY</ph>
            </div>                    
            <div class="pnav" style="justify-content: flex-end; gap: 10px; border: none;">
                <select name="timePeriod" id="timePeriod">
                    <option value="">Filter</option>
                    <option value="das5">This Year</option>
                    <option value="das3">This Month</option>
                    <option value="das4">This Week</option>
                    <option value="das6">Today</option>
                    <option value="das2">Up To Date</option>
                </select>
            </div>
        </div>
    </div>

    <div class="main-content graph" style="align-items: flex-start; overflow: hidden;">
        <iframe src="/admin/status-chart4" class="pframe" style="overflow: hidden;"></iframe>
    </div>
    <br>
    <div class="sub" style="height: 35px; display: flex; align-items: center;">
        <p style="font-size: 20px; font-weight: 500; color: #364e3b;">
            <i class="fas fa-address-card" style="font-size: 20px; color: inherit; margin: 8px;"></i>
            ID Card Issuance Insights
            | <%= totalSuccessCount %> Issued
        </p>
    </div>
    <div style="display: flex; flex-direction: row;">
        <div>
            <table>
                <thead>
                    <tr>
                        <th>By Office</th>
                        <th>Total</th>
                        <th>Percentage</th>
                    </tr>
                </thead>
                <tbody>
                    <% officeData.forEach(data => { %>
                    <tr>
                        <td><%= data.office %></td>
                        <td><%= data.successCount %></td>
                        <td><%= data.successPercentage %>%</td>
                    </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
        <div>
            <table>
                <thead>
                    <tr>
                        <th>By Barangay</th>
                        <th>Total</th>
                        <th>Percentage</th>
                    </tr>
                </thead>
                <tbody>
                    <% brgyNameData.forEach(data => { %>
                    <tr>
                        <td><%= data.brgyName %></td>
                        <td><%= data.successCount %></td>
                        <td><%= data.successPercentage %>%</td>
                    </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
        <div>
            <table>
                <thead>
                    <tr>
                        <th>By Type</th>
                        <th>Total</th>
                        <th>Percentage</th>
                    </tr>
                </thead>
                <tbody>
                    <% typeWithSuccessData.forEach(data => { %>
                    <tr>
                        <td><%= data.type %></td>
                        <td><%= data.successCount %></td>
                        <td><%= data.successPercentage %>%</td>
                    </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
    </div>
<hr>
<div class="sub">
    <div class="ctrl left">
        <p1>Issued ID Records</p1>
    </div>
    <div class="ctrl right">
        <input type="text" id="univ" placeholder="Search contact.." oninput="searchTable()">
    </div>
</div>
<table id="overall">
    <thead>
        <tr>
            <th>Employee</th>
            <th>Issued ID</th>
            <th>Remarks</th>
            <th>Type</th>
            <th>Barangay</th>
            <th>Office</th>
            <th>Date</th>
        </tr>
    </thead>
    <tbody>
        <% successRecords.forEach(record => { %>
            <tr>
                <td><%= record.userName %></td>
                <td><%= record.idType %></td>
                <td><%= record.remarks %></td>
                <td><%= record.type %></td>
                <td><%= record.brgyName %></td>
                <td><%= record.office %></td>
                <td><%= record.createAt %></td>
            </tr>
        <% }) %>
    </tbody>
</table>
<div class="sub">
    <div class="ctrl right">
        <span id="totalRecords" class="totalRecords"></span> | Display Per Page: 
        <select id="rowsPerPage" onchange="updateRowsPerPage()">
            <option value="10">10</option>
            <option value="50">50</option>
            <option value="100">100</option>
        </select>
        <div class="pagination" id="pagination"></div>
    </div>
</div>



            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const overall = document.getElementById("overall");
            const paginationContainer = document.getElementById("pagination");
            const rowsPerPageSelect = document.getElementById("rowsPerPage");
            const totalRecordsLabel = document.getElementById("totalRecords");
            const searchInput = document.getElementById("univ");
    
            let currentPage = 1;
            let rowsPerPage = 10; // Default rows per page
            let allRows = Array.from(overall.getElementsByTagName("tbody")[0].rows);
            let filteredRows = allRows; // Initially all rows are shown
    
            // Function to render the table based on the current page
            function renderTable() {
                const start = (currentPage - 1) * rowsPerPage;
                const end = start + rowsPerPage;
    
                // Hide all rows initially
                allRows.forEach(row => {
                    row.style.display = "none";
                });
    
                // Show only the rows for the current page from the filtered rows
                for (let i = start; i < end && i < filteredRows.length; i++) {
                    filteredRows[i].style.display = ""; // Show matching rows
                }
    
                // Update the total records label to reflect the filtered data
                totalRecordsLabel.innerText = `Total Records: ${filteredRows.length}`;
                renderPagination(filteredRows.length);
            }
    
            // Function to render pagination buttons
            function renderPagination(totalRows) {
                paginationContainer.innerHTML = ""; // Clear previous pagination
    
                const totalPages = Math.ceil(totalRows / rowsPerPage);
    
                // Create "previous" button
                const prevButton = document.createElement("button");
                prevButton.innerHTML = "« Previous";
                prevButton.disabled = currentPage === 1;
                prevButton.onclick = () => {
                    currentPage--;
                    renderTable();
                };
                paginationContainer.appendChild(prevButton);
    
                // Create page number buttons
                for (let i = 1; i <= totalPages; i++) {
                    const pageButton = document.createElement("button");
                    pageButton.innerHTML = i;
                    pageButton.className = (i === currentPage) ? "active" : "";
                    pageButton.onclick = () => {
                        currentPage = i;
                        renderTable();
                    };
                    paginationContainer.appendChild(pageButton);
                }
    
                // Create "next" button
                const nextButton = document.createElement("button");
                nextButton.innerHTML = "Next »";
                nextButton.disabled = currentPage === totalPages;
                nextButton.onclick = () => {
                    currentPage++;
                    renderTable();
                };
                paginationContainer.appendChild(nextButton);
            }
    
            // Update the number of rows per page
            function updateRowsPerPage() {
                rowsPerPage = parseInt(rowsPerPageSelect.value);
                currentPage = 1; // Reset to first page when the user changes rows per page
                renderTable();
            }
    
            // Function to search the table based on user input
            function searchTable() {
                const query = searchInput.value.toLowerCase(); // Get the search term in lowercase
    
                // Filter rows based on search term
                filteredRows = allRows.filter(row => {
                    // Check if any cell in the row contains the search term
                    return Array.from(row.cells).some(cell => {
                        return cell.textContent.toLowerCase().includes(query);
                    });
                });
    
                // Reset to first page when search term changes
                currentPage = 1;
    
                // Re-render the table with filtered data
                renderTable();
            }
    
            // Initial setup
            rowsPerPageSelect.addEventListener("change", updateRowsPerPage);
            searchInput.addEventListener("input", searchTable); // Attach search input event
    
            renderTable(); // Show all rows by default
        });
    </script>
    <script>
        function navigateToPage() {
            const selectElement = document.getElementById('filterInput');
            const selectedValue = selectElement.value;
    
            if (selectedValue) {
                // Redirect to the selected page
                window.location.href = selectedValue;
            }
        }
    </script>

<script>
    const ctx = document.getElementById('myChart').getContext('2d');

    const myChart = new Chart(ctx, {
        type: 'bar', // Bar chart
        data: {
            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
            datasets: [
                {
                    label: 'Elected',
                    data: [120, 35, 50, 220, 85, 100, 150, 130, 170, 190, 20, 65], // Shuffled data
                    backgroundColor: '#6b9f7d', // Bar color
                },
                {
                    label: 'Co-term',
                    data: [15, 200, 30, 70, 20, 90, 160, 140, 50, 180, 110, 160], // Shuffled data
                    backgroundColor: '#4a7b58', // Bar color
                },
                {
                    label: 'Casual',
                    data: [90, 40, 70, 210, 230, 110, 250, 160, 190, 30, 55, 140], // Shuffled data
                    backgroundColor: '#44624a', // Bar color
                },
                {
                    label: 'Job-order',
                    data: [10, 45, 150, 65, 20, 35, 85, 120, 105, 165, 180, 150], // Shuffled data
                    backgroundColor: '#3d5842', // Bar color
                },
                {
                    label: 'Permanent',
                    data: [5, 240, 15, 70, 10, 30, 90, 150, 120, 180, 210, 50], // Shuffled data
                    backgroundColor: '#364e3b', // Bar color
                }
            ]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                    grid: {
                        display: false
                    }
                },
                x: {
                    ticks: {
                        color: 'black',
                        font: {
                            size: 14,
                            family: 'poppins'
                        }
                    },
                    grid: {
                        color: 'transparent'
                    }
                }
            },
            plugins: {
                legend: {
                    labels: {
                        color: 'black',
                        font: {
                            size: 16,
                            family: 'poppins',
                        }
                    }
                },
                tooltip: {
                    callbacks: {
                        label: function(tooltipItem) {
                            return tooltipItem.dataset.label + ': ' + tooltipItem.raw;
                        }
                    }
                }
            },
            elements: {
                bar: {
                    borderWidth: 0, // Removed border color
                    borderRadius: 0, // Optional: rounded corners
                    barThickness: 35,
                }
            }
        }
    });
</script>
<script>
    document.getElementById('userIcon').addEventListener('click', function(event) {
    event.preventDefault(); // Prevent default link behavior
    const userOption = document.querySelector('.userOption');
    const rect = this.getBoundingClientRect();
    const distanceBelow = 9;

    if (userOption.style.display === 'none' || userOption.style.display === '') {
        userOption.style.display = 'flex'; // Show the notif-nav
        userOption.style.left = '8px'; // Align to the right edge
        userOption.style.top = `${rect.bottom + distanceBelow}px`; // Position below the icon
        this.classList.add('user-icon-active'); // Add active class
    } else {
        userOption.style.display = 'none'; // Hide the notif-nav
        this.classList.remove('user-icon-active'); // Remove active class
    }
});

// Optional: Close the info-nav when clicking outside
document.addEventListener('click', (event) => {
    const userOption= document.querySelector('.userOption');
    if (!event.target.closest('#userIcon') && !userOption.contains(event.target)) {
        userOption.style.display = 'none'; // Hide the info-nav
        document.getElementById('userIcon').classList.remove('user-icon-active'); // Remove active class
    }
});
</script>


<script>
    function printDas() {
        const sections = document.querySelectorAll('.analytics'); // Fixed class name
        let printContent = '';

        sections.forEach(section => {
            printContent += section.outerHTML; // Use outerHTML to include the entire element
        });

        const originalContent = document.body.innerHTML;

        // Temporarily replace body content
        document.body.innerHTML = printContent; 
        window.print(); // Open print dialog

        // Restore original content after the print dialog is opened
        setTimeout(() => {
            document.body.innerHTML = originalContent;
            window.location.reload(); // Reload the page to reset
        }, 0);
    }
</script>

<script>
    // Listen for changes to the dropdown selection
    document.getElementById('timePeriod').addEventListener('change', function() {
        var selectedValue = this.value; // Get the selected value

        if (selectedValue) {
            // Redirect to the selected page based on the selected option
            window.location.href = `/admin/${selectedValue}`; 
        }
    });
</script>

<script src="/script.js"></script>
</body>
</html>
